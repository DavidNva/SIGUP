@{
    ViewBag.Title = "Herramientas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="mt-4">Herramientas</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active">Administra los elementos existentes del inventario</li>
</ol>


<nav class="sticky-top bg-light">
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        <button class="nav-link active" id="nav-herramientas-tab" data-bs-toggle="tab" data-bs-target="#nav-herramientas" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Herramientas</button>
        <button class="nav-link" id="nav-marcas-tab" data-bs-toggle="tab" data-bs-target="#nav-marcas" type="button" role="tab" aria-controls="nav-marcas" aria-selected="false">Marcas</button>
        <button class="nav-link" id="nav-categorias-tab" data-bs-toggle="tab" data-bs-target="#nav-categorias" type="button" role="tab" aria-controls="nav-categorias" aria-selected="false">Categorías</button>
    </div>
</nav>

<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fade show active" id="nav-herramientas" role="tabpanel" aria-labelledby="nav-herramientas-tab">
        <button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'herramientas')"> Añadir herramienta </button>

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
        <div class="modal fade" id="FormModal_Herramientas" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
            @*Esto ultimo de data-bs-backdrop es para*@
            <div class="modal-dialog">
                @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="exampleModalLabel">Nueva marca</h5>
                        <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                        <input id="txtIdHerramienta" type="text" value="0" placeholder="Ingresa el identificador de tu herramienta" />@*Con el valor 0 se identifica si es un usuario nuevo a ingresar o es valor ya existe
                        pero si es diferente a 0 significa que ya existe y vamos a editar*@
                        <div class="row g-1">
                            <!--Porque solamente esta formando una fila-->

                            <div class="col-sm-6">
                                <label for="txtDescripcionMarca" class="form-label">Nombre</label>
                                <input type="text" class="form-control" id="txtNombreHerramienta" autocomplete="off" placeholder="Ingresa el nombre de tu herramienta">
                            </div>

                            <div class="col-sm-6">
                                <label for="txtDescripcionMarca" class="form-label">Stock</label>
                                <input type="number" class="form-control" id="txtStockHerramienta" autocomplete="off">
                            </div>

                            <div class="col-sm-6">
                                <label for="txtDescripcionMarca" class="form-label">Observaciones</label>
                                <input type="text" class="form-control" id="txtObservacionesHerramienta" autocomplete="off" placeholder="Ingresa observaciones iniciales de la herramienta">
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbActivoHerramienta" class="form-label"> ¿Está disponible para prestamos? </label>
                                <select id="cmbActivoHerramienta" class="form-select">
                                    <option value="1">Si</option>
                                    <option value="0">No</option>
                                </select>
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbMarcaHerramienta" class="form-label"> Marca </label>
                                <select id="cmbMarcaHerramienta" class="form-select">
                                </select>
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbCategoriaHerramienta" class="form-label"> Categoría para la herramienta </label>
                                <select id="cmbCategoriaHerramienta" class="form-select">
                                </select>
                            </div>
                        </div>
                        @*mensaje de alerta*@
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeErrorHerramientas" class="alert alert-danger" role="alert">
                                    ...
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCerrar">Cerrar</button>
                        <button type="button" class="btn btn-primary" onclick="guardar('marcas')">Guardar</button>
                    </div>
                </div>
            </div>
        </div>

        <table id="tablaHerramientas" class="display cell-border" style="width:100%">
            <thead class="text-lg-center">
                <tr>
                    <th>#</th>
                    <th>Nombre</th>
                    <th>Cantidad</th>
                    <th>Marca</th>
                    <th>Categoría</th>
                    <th>Observaciones</th>
                    <th>Activo</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody class="text-lg-center">
                @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

            </tbody>
        </table>
    </div>

    <div class="tab-pane fade" id="nav-marcas" role="tabpanel" aria-labelledby="nav-marcas-tab">
        <button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'marcas')"> Añadir nuevo </button>

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
        al momento de precionar el boton nuevo-->
        <div class="modal fade" id="FormModal_Marcas" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
            @*Esto ultimo de data-bs-backdrop es para*@
            <div class="modal-dialog">
                @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="exampleModalLabel">Nueva marca</h5>
                        <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                        <input id="txtIdMarca" type="hidden" value="0" />@*Con el valor 0 se identifica si es un usuario nuevo a ingresar o es valor ya existe
                            pero si es diferente a 0 significa que ya existe y vamos a editar*@
                        <div class="row g-1">
                            <!--Porque solamente esta formando una fila-->

                            <div class="col-sm-6">
                                <label for="txtDescripcionMarca" class="form-label">Descripcion</label>
                                <input type="text" class="form-control" id="txtDescripcionMarca" autocomplete="off">
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbActivoMarca" class="form-label">Activo</label>
                                <select id="cmbActivoMarca" class="form-select">
                                    <option value="1">Si</option>
                                    <option value="0">No</option>
                                </select>
                            </div>
                        </div>
                        @*mensaje de alerta*@
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeErrorMarca" class="alert alert-danger" role="alert">
                                    ...
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCerrar">Cerrar</button>
                        <button type="button" class="btn btn-primary" onclick="guardar('marcas')">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
        <table id="tablaMarcas" class="display cell-border" style="width:100%">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Descripcion</th>
                    <th>Activo</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

            </tbody>
        </table>
    </div>


    <div class="tab-pane fade" id="nav-categorias" role="tabpanel" aria-labelledby="nav-categorias-tab">
        @*<button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'marcas')"> Añadir nuevo </button>*@
        <ol class="breadcrumb mb-4 mt-4">
            <li class="breadcrumb-item"><a href="#">Administrador</a></li>
            <li class="breadcrumb-item active">Categorias</li>
        </ol>

        <div class="card">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>Lista de Categorias
            </div>
            <div class="card-body">
                @*boostrap es como manejar una hoja en excel*@
                <div class="row">
                    <div class="col-12  d-flex justify-content-between align-items-center">
                        @*numero de filas*@
                        <button type="button" class="btn btn-success" onclick="abrirModal(null, 'categorias')">Crear Nuevo</button>

                        <form action="@Url.Action("DescargarPDF_Categoria","SIGUP")" class="mt-0 ml-2">
                            <button class="btn btn-danger" type="submit"><i class="fas fa-file-pdf"></i> Descargar PDF</button>
                        </form>
                    </div>
                </div>
                <hr /> @*el id es para identificar la tabla*@
                <table id="tablaCategoria" class="display cell-border" style="width:100%">
                    <thead>
                        <tr>
                            <th>Código</th>
                            <th>Descripcion</th>
                            <th>Activo</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

                    </tbody>
                </table>

            </div>

        </div>

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
        <div class="modal fade" id="FormModalCategoria" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
            @*Esto ultimo de data-bs-backdrop es para*@
            <div class="modal-dialog">
                @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="exampleModalLabel">Categoria</h5>
                        <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                        <input id="txtIdCategoria" type="hidden" value="0" />@*Con el valor 0 se identifica si es un usuario nuevo a ingresar o es valor ya existe
                        pero si es diferente a 0 significa que ya existe y vamos a editar*@
                        <div class="row g-1">
                            <!--Porque solamente esta formando una fila-->

                            <div class="col-sm-6">
                                <label for="txtDescripcionCategoria" class="form-label">Descripcion</label>
                                <input type="text" class="form-control" id="txtDescripcionCategoria" autocomplete="off">
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbActivoCategoria" class="form-label">Activo</label>
                                <select id="cmbActivoCategoria" class="form-select">
                                    <option value="1">Si</option>
                                    <option value="0">No</option>
                                </select>
                            </div>
                        </div>
                        @*mensaje de alerta*@
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeErrorCategoria" class="alert alert-danger" role="alert">
                                    ...
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                        <button type="button" class="btn btn-primary" onclick="guardar('categorias')">Guardar</button>
                       
                    </div>
                </div>
            </div>
        </div>


        <!--Nuevo-->
        @*<button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'categorias')"> Añadir nuevo </button>*@

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
        @*<div class="modal fade" id="FormModal_Categorias" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">*@


        @*Esto ultimo de data-bs-backdrop es para*@



        @*<div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" onclick="guardar('categorias')">Guardar</button>
                </div>
            </div>
        </div>*@




        <!--<table id="tablaCategoria" class="display cell-border" style="width:100%">
    <thead>
        <tr>
            <th>Código</th>
            <th>Descripcion</th>
            <th>Activo</th>
            <th></th>
        </tr>
    </thead>
    <tbody>-->
        @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

        <!--</tbody>
    </table>-->
    </div>
</div>


<!--<button class="btn btn-success" style="margin-bottom:20px;"> Añadir nuevo </button>

<table id="tabla" class="display cell-border" style="width:100%">
    <thead>
        <tr>
            <th>#</th>
            <th>Descripcion</th>
            <th>Activo</th>
            <th>Fecha de registro</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>-->
@*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

<!--</tbody>
</table>-->

@section scripts{
    <script>
        var tablaMarcas;
        var tablaCategorias;
        var tablaHerramientas;

        tablaHerramientas = $("#tablaHerramientas").DataTable({
            responsive: true,
            ordering: false,
            "ajax": {
                url: '@Url.Action("listarHerramientas", "SIGUP")',
                type: 'GET',
                dataType: 'json'
            },
            "columns": [
                { "data": "idHerramienta" },
                { "data": "nombre" },
                { "data": "cantidad" },
                {
                    "data": "marca", "render": function (data) {
                        return data.descripcion
                    }
                },
                {
                    "data": "categoHerramienta", "render": function (data) {
                        return data.descripcion
                    }
                },
                { "data": "observaciones" },
                {
                    "data": "activo", "render": function (valor) {
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }
                },
                {
                    "data": "IdHerramienta", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editarHerramienta btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacionherramienta": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminarHerramienta btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                            ).attr({ "data-informacionherramienta": JSON.stringify(row) })[0].outerHTML;

                    }
                }

            ]
        })

        tablaMarcas = $("#tablaMarcas").DataTable({
            responsive: true,/*Para que sea resposiva*/
            ordering: false,
            "ajax": {/*Como pinta la tabla, ajax solo trae todos los valores*/
                url: '@Url.Action("ListarMarca", "SIGUP")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Mantenedir cuando igualamos en el js un data
                 y el seguno valor es como se llama la columna*/
                { "data": "idMarca" },
                { "data": "descripcion" },/*El nombre del segundo identificador debe ser igual al de la tabla, la columna*/
                {
                    "data": "activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }

                },
                {
                    "data": "idMarca", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editarMarca btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacionmarca": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminarMarca btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                            ).attr({ "data-informacionmarca": JSON.stringify(row) })[0].outerHTML;

                    }
                }
            ]
        });




        var tabladata;
        var filaSeleccionada;/*Son variables globales para se usada por lo que este dentro */

        @*
            Este solo se uso de ejemplo para ver los datos listados en consola
            jQuery.ajax({/*Llama al metodo de guardar usuario, que dependiendo de la accion va a crear nuevo
             o a editar, tomando en cuenta que se basa en que si el id = 0 o no*/
            url: '@Url.Action("ListarCategoria", "SIGUP")',
            type: "GET",
            dataType:"json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                console.log(data)
            }
        })*@

        //el hastash significa que se refiere a un id, entonces llama o igual la variable a una tabla declarada
        //anteriormente en el html de arriba con id que se llama tabla
        tabladata = $("#tablaCategoria").DataTable({
            responsive: true,/*Para que sea resposiva*/
            ordering: false,
            "ajax": {/*Como pinta la tabla, ajax solo trae todos los valores*/
                url: '@Url.Action("ListarCategoria", "SIGUP")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Mantenedir cuando igualamos en el js un data
                 y el seguno valor es como se llama la columna*/
                { "data": "idCategoria" },
                { "data": "descripcion" },/*El nombre del segundo identificador debe ser igual al de la tabla, la columna*/
                {
                    "data": "activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }

                },
                {
                    "data": "idCategoria", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editarCategoria btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacioncategoria": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminarCategoria btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                        ).attr({ "data-informacioncategoria": JSON.stringify(row) })[0].outerHTML;

                    },
                    "orderable": false,
                    "searchable": false,
                    "width": "90px"
                }
            ],/*Propiedad o atributos van dentro de las comillas ""*/
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json"
            }

        });


        function abrirModal(json, modal) {
            switch (modal) {
                case 'herramientas':
                    $("#txtIdHerramienta").val(0);
                    $("#txtNombreHerramienta").val("");
                    $("#txtStockHerramienta").val(0);
                    $("#txtObservacionesHerramienta").val("");
                    $("#cmbActivoHerramienta").val(1);

                    $("#mensajeErrorHerramientas").hide();
                    /*Llamamos al form modal*/
                    if (json != null) {
                        $("#txtIdMarca").val(json.idMarca);
                        $("#txtDescripcionMarca").val(json.descripcion);
                        $("#cmbActivoMarca").val(json.activo == true ? 1 : 0);
                    }

                    $("#FormModal_Herramientas").modal("show");
                    break;
                case 'marcas':
                    $("#txtIdMarca").val(0); /*Con el # llama con el id del elemento chtml*/
                    $("#txtDescripcionMarca").val("");
                    $("#cmbActivoMarca").val(1);


                    $("#mensajeErrorMarca").hide();
                    /*Llamamos al form modal*/
                    if (json != null) {
                        $("#txtIdMarca").val(json.idMarca);
                        $("#txtDescripcionMarca").val(json.descripcion);
                        $("#cmbActivoMarca").val(json.activo == true ? 1 : 0);
                    }

                    $("#FormModal_Marcas").modal("show");
                    break;
                case 'categorias':
                    //$("#txtId").val(0); /*Con el # llama con el id del elemento chtml*/
                    //$("#txtDescripcion").val("");
                    //$("#cmbActivo").val(1);


                    //$("#mensajeErrorMarca").hide();
                    ///*Llamamos al form modal*/
                    //if (json != null) {
                    //    $("#txtId").val(json.idCategoria);
                    //    $("#txtDescripcion").val(json.descripcion);
                    //    $("#cmbActivo").val(json.activo == true ? 1 : 0);
                    //}

                    //$("#FormModal_Categorias").modal("show");
                    $("#txtIdCategoria").val(0); /*Con el # llama con el id del elemento chtml*/
                    $("#txtDescripcionCategoria").val("");
                    $("#cmbActivoCategoria").val(1);


                    $("#mensajeErrorCategoria").hide();
                    /*Llamamos al form modal*/
                    if (json != null) {/*Porque el metodo abrir modal puede abrirse con crear nuevo o con editar,
                    * por eso esta linea*/
                        $("#txtIdCategoria").val(json.idCategoria);/*Traerá el codigo pero no lo mostrará al usuario*/
                        $("#txtDescripcionCategoria").val(json.descripcion); /*El json o data, trae una propieadad llamada nombres*/
                        $("#cmbActivoCategoria").val(json.activo == true ? 1 : 0);/*Si es igual a true de el valor de uno
                        y si no es true de el valor de 0*/

                    }

                    $("#FormModalCategoria").modal("show");

                break;

                default:
                    /*alert('No se ha seleccionado alguno');*/
                    /*alert('No se ha seleccionado ningun case');*/
                    swal({
                        title: "Abrir modal",
                        text: "No se ha seleccionado algun case",
                        type: "info"
                    });
                    break;
            }
        }

        function guardar(elemento) {
            switch (elemento) {
                case 'herramientas':
                    break;

                case 'marcas':
                    console.log('En marcas');
                    var marca = {
                        idMarca: $("#txtIdMarca").val(),
                        descripcion: $("#txtDescripcionMarca").val(),
                        activo: $("#cmbActivoMarca").val() == 1 ? true : false
                    }
                    console.log(marca['descripcion']);

                    jQuery.ajax({
                        url: '@Url.Action("guardarMarca", "SIGUP")',
                        type: "POST",
                        data: JSON.stringify({ marca: marca }),
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if (marca.idMarca == "0") {
                                if (data.resultado != 0) {
                                    console.log("Entró");
                                    marca.idMarca = data.resultado;
                                    tablaMarcas.row.add(marca).draw(false);
                                    //$("#btnEliminar").trigger('click');
                                    $("#FormModal_Marcas").modal("hide");
                                    tablaMarcas.ajax.reload();
                                } else {
                                    $("#mensajeErrorMarca").text(data.mensaje);
                                    $("#mensajeErrorMarca").show();
                                }
                            } else {
                                if (data.resultado) {
                                    tablaMarcas.ajax.reload();
                                    /* tabladata.row(filaSeleccionada).data(Categoria).draw(false);*/
                                    filaSeleccionada = null;
                                    $("#FormModal_Marcas").modal("hide");

                                } else {
                                    $("#mensajeErrorCategoria").text(data.mensaje);
                                    $("#mensajeErrorCategoria").show();
                                }
                            }
                        },

                        error: function (error) {
                            /* $(".modal-body").LoadingOverlay("hide");*/
                            console.log("Error de no se que :V");
                            $("#mensajeErrorMarca").text("Error Ajax");
                            $("#mensajeErrorMarca").show();
                        }
                    })
                break;

                case 'categorias':

                        var Categoria = {
                            idCategoria: $("#txtIdCategoria").val(), /*Los dos puntos de la condicion es "si es diferente es:"
                             el signo de interrogacion es un entonces
                             leyendo la sentencia de abajo seria, si el valor es igual a 1, entonces es true (verdadero)
                             pero si es diferentes es falso*/
                            descripcion: $("#txtDescripcionCategoria").val(),/*El punto val sirve para obtener un valor y para establecer un valor*/
                            activo: $("#cmbActivoCategoria").val() == 1 ? true : false, /*Para saber si se esta seleccionado un Si (Si = 0)
                             * o un no (No = 0*/
                        }
                        jQuery.ajax({/*Llama al metodo de guardar usuario, que dependiendo de la accion va a crear nuevo
                          o a editar, tomando en cuenta que se basa en que si el id = 0 o no*/
                            url: '@Url.Action("GuardarCategoria", "SIGUP")',
                            type: "POST",
                            data: JSON.stringify({ objeto: Categoria}),/*Paso de valores
                             el stringfy lo convierte a texto*/
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                $(".modal-body").LoadingOverlay("hide");
                                //CATEGORIA NUEVO
                                if (Categoria.IdCategoria == "0") { /*Es decir, si el id es 0 en inicio (el valor es 0 inicialmente) significa que es
                                    un usuario nuevo, por lo que se ha dado dando clic con el boton de crear*/
                                    /*alert("Crear usuario")*/

                                    if (data.resultado != 0) {
                                        Categoria.IdCategoria = data.resultado;
                                        tabladata.row.add(Categoria).draw(false);
                                        $("#FormModalCategoria").modal("hide");
                                        tabladata.ajax.reload();
                                    } else {

                                        $("#mensajeErrorCategoria").text(data.mensaje);
                                        $("#mensajeErrorCategoria").show();
                                    }
                                }
                                //CATEGORIA Editar
                                else {
                                    /*Pero si el id es diferente de 0, es decir ya existe, entonces se esta editando
                                     a un usuario, por lo que indica que se ha dado clic en el boton de editar, eso lo comprobamos
                                     con los alert comentados*/

                                    if (data.resultado) {
                                        tabladata.ajax.reload();
                                       /* tabladata.row(filaSeleccionada).data(Categoria).draw(false);*/
                                        filaSeleccionada = null;
                                        $("#FormModalCategoria").modal("hide");

                                    } else {
                                        $("#mensajeErrorCategoria").text(data.mensaje);
                                        $("#mensajeErrorCategoria").show();
                                    }
                                }
                            },
                                error: function (error) {
                                    $(".modal-body").LoadingOverlay("hide");
                                    $("#mensajeErrorCategoria").text("Error Ajax");
                                    $("#mensajeErrorCategoria").show();
                                },
                                beforeSend: function () {
                                    $(".modal-body").LoadingOverlay("show", {
                                        imageResizeFactor: 2,
                                        text: "Cargando...",
                                        size: 24
                                    });
                                }
                             });


                break;

                default:
                   /* alert('No se ha seleccionado ningun case');*/
                    swal({
                        title: "Guardar",
                        text: "No se ha seleccionado algun case",
                        type: "info"
                    });
                    break;
            }
        }


        /*Botones editar y eliminar de categoria */
         /*--------------- Al dar clic en el boton de editar-------------------------------*/

        /*Estamos llamando a la tabla especificamente al tbody, todo ira en relacion a esa tabla*/
        $("#tablaCategoria tbody").on("click", '.btn-editarCategoria', function () {
            /*This es la misma tabla, se llama
             tr es el row o la fila seleccionado de la tabla */
            filaSeleccionada = $(this).closest("tr");
            var data = tabladata.row(filaSeleccionada).data();

            //console.log(data);/*Para visualizar en consola*/
            //abrirModal(data);
            var json = $(this).data("informacioncategoria")
            //console.log(json);
            abrirModal(json, 'categorias')

        })

        $("#tablaCategoria tbody").on("click", '.btn-eliminarCategoria', function () {

            //var categoriaSeleccionado = $(this).closest("tr");
            //console.log(categoriaSeleccionado)

            var json = $(this).data("informacioncategoria")
            //var idcategoria = json.Idcategoria
            //console.log(json.Idcategoria);
            //console.log(data);
            //if (typeof json !== "undefined" && json !== null) {
            //    // Ahora puedes acceder a las propiedades de data de forma segura
            //    var id = json.Idcategoria;
            //    // resto del código aquí
            //} else {
            //    console.log("La variable data es undefined o null");
            //}
            swal({
                title: "¿Esta Seguro?",
                text: "¿Desea eliminar la categoria?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
            function () {
                jQuery.ajax({
                    url: '@Url.Action("EliminarCategoria", "SIGUP")',
                    type: "POST",
                    data: JSON.stringify({ id:json.idCategoria }),/*Paso de valores*/
                    /*el stringfy lo convierte a texto*/
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {/*Ese data esta almacenando la respuesta del metodo eliminar usuario
                     * hecho en homeController*/
                        //ELIMINAR CATEGORIA

                        if (data.resultado) { /*si el resultado es verdadera)*/
                            //tabladata.row(usuarioSeleccionado).remove().draw();
                            tabladata.ajax.reload();
                        }else {
                            swal("No se pudo eliminar", data.mensaje, "error")
                        }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/

                    },
                    error: function (error) {
                        console.log(error)
                    }

                });
            });
        })

        $("#tablaMarcas tbody").on("click", '.btn-editarMarca', function () {
            /*This es la misma tabla, se llama
             tr es el row o la fila seleccionado de la tabla */
            filaSeleccionada = $(this).closest("tr");
            var data = tablaMarcas.row(filaSeleccionada).data();

            //console.log(data);/*Para visualizar en consola*/
            //abrirModal(data);
            var json = $(this).data("informacionmarca")
            //console.log(json);
            abrirModal(json, 'marcas')
        })

        $("#tablaMarcas tbody").on("click", '.btn-eliminarMarca', function () {

            var json = $(this).data("informacionmarca")
            swal({
                title: "¿Esta Seguro?",
                text: "¿Desea eliminar la marca?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
                function () {
                    jQuery.ajax({
                        url: '@Url.Action("eliminarMarca", "SIGUP")',
                        type: "POST",
                        data: JSON.stringify({ id: json.idMarca }),/*Paso de valores*/
                        /*el stringfy lo convierte a texto*/
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {/*Ese data esta almacenando la respuesta del metodo eliminar usuario
                     * hecho en homeController*/
                            //ELIMINAR CATEGORIA

                            if (data.resultado) { /*si el resultado es verdadera)*/
                                //tabladata.row(usuarioSeleccionado).remove().draw();
                                tablaMarcas.ajax.reload();
                            } else {
                                swal("No se pudo eliminar", data.mensaje, "error")
                            }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/

                        },
                        error: function (error) {
                            console.log(error)
                        }

                    });
                });
        });


    </script>
}

